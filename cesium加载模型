<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Use correct character set. -->
  <meta charset="utf-8" />
  <!-- Tell IE to use the latest, best version. -->
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <!-- Make the application on mobile take up the full browser screen and disable user scaling. -->
  <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no" />
  <title>Hello World!</title>
  <script src="/Cesium/Cesium.js"></script>
</head>
<style>
    @import url(/Cesium/Widgets/Widgets.css);
    @import url(/bucketRaw.css);
    html,
    body,
    #cesiumContainer {
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      overflow: hidden;
      
    }
    #toolbar input {
        vertical-align: middle;
        padding-top: 2px;
        padding-bottom: 2px;
    }
</style>
<div id="cesiumContainer" class="fullSize"></div>

<div id="loadingOverlay"><h1>Loading...</h1></div>
<div id='toolbar'>
    <div>Height</div>
    <input type="range" min="0" max="1000.0" step="10" data-bind="value: height, valueUpdate: 'input'">
    <input type="text" size="5" data-bind="value: height">
</div>
<body>
    <script>
        Cesium.Ion.defaultAccessToken ='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI1NmIzZjNmMC04NDc5LTQ3NzYtOTdhOS1hM2ZmN2EyNDk0ZWEiLCJpZCI6Mjc1OTAsInNjb3BlcyI6WyJhc3IiLCJnYyJdLCJpYXQiOjE1ODk3OTIzMTN9.xSsBPeAW_Na25B_iTdNXUbyxpageGG48z5yU7nb6BME';
var viewer = new Cesium.Viewer("cesiumContainer", {
    shadows: true,
  });
  
  viewer.scene.globe.depthTestAgainstTerrain = true;
  
  var viewModel = {
    height: 0,
  };
  
  Cesium.knockout.track(viewModel);
  
  var toolbar = document.getElementById("toolbar");
  Cesium.knockout.applyBindings(viewModel, toolbar);
  
  var tileset = new Cesium.Cesium3DTileset({
  url: "./Scene/jcstreet/tileset.json",
  });
  
  tileset.readyPromise
    .then(function (tileset) {
      viewer.scene.primitives.add(tileset);
      viewer.zoomTo(
        tileset,
        new Cesium.HeadingPitchRange(
          0.0,
          -0.5,
          tileset.boundingSphere.radius * 2.0
        )
      );
    })
    .otherwise(function (error) {
      console.log(error);
    });
  
  Cesium.knockout
    .getObservable(viewModel, "height")
    .subscribe(function (height) {
      height = Number(height);
      console.log(height);
      if (isNaN(height)) {
        return;
      }
       var heightOffset = height;  //高度
            var boundingSphere = tileset.boundingSphere; 
            var cartographic = Cesium.Cartographic.fromCartesian(boundingSphere.center);
            var surface = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, 0.0);
            console.log(surface);
            var offset = Cesium.Cartesian3.fromRadians(cartographic.longitude, cartographic.latitude, heightOffset);
            var translation = Cesium.Cartesian3.subtract(offset, surface, new Cesium.Cartesian3());
            tileset.modelMatrix = Cesium.Matrix4.fromTranslation(translation);
            viewer.zoomTo(tileset, new Cesium.HeadingPitchRange(0.5, -0.2, tileset.boundingSphere.radius * 1.0))
    });
  
  
</script>
</body>

</html>
